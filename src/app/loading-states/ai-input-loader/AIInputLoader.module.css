.container {
    width: 100%;
}

.inputContainer {
    width: 100%;
    max-width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    gap: 1rem;
}

.statusTextContainer {
    position: absolute;
    top: 24px;
    left: 26px;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 8px;
}

.avatarContainer {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.statusText {
    font-size: 12px;
    line-height: 16px;
    color: var(--balto-text-secondary);
    font-weight: 500;
    text-transform: uppercase;
}

.statusText.resting {
    font-size: 14px;
    line-height: 20px;
    color: var(--balto-text-secondary);
    text-transform: none;
}

.generateButton {
    font-size: 14px;
    line-height: 20px;
    color: var(--balto-text-secondary);
    font-weight: 500;
    text-decoration: underline;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    font-family: inherit;
    text-underline-offset: 2px;
}

.generateButton:hover {
    color: var(--balto-text-primary);
}

/* Default state - initial text area */
.styledInput {
    overflow: hidden;
    width: 100%;
    padding: 24px;
    padding-top: 52px;
    font-size: 14px;
    line-height: 20px;
    border: 1px solid var(--balto-border-primary);
    border-radius: 6px;
    background: var(--balto-background-secondary);
    transition: all 0.3s ease;
    box-shadow: none;
    outline: none;
    position: relative;
    color: var(--balto-text-primary);
    box-sizing: border-box;
    height: 120px;
    vertical-align: top;
    font-family: inherit;
}

.styledInput::placeholder {
    color: var(--balto-text-tertiary);
}

/* Thinking state - during animation */
.styledInput.thinking {
    border: 1px solid transparent;
    background: var(--balto-background-secondary);
    animation: fade-in-shadow 0.3s ease forwards, pulse-shadow 3s ease-in-out infinite 0.3s;
}

@keyframes fade-in-shadow {
    from {
        box-shadow: none;
    }
    to {
        box-shadow: -24px -24px 60px 0px var(--balto-glow-primary) inset, 32px 32px 80px 0px var(--balto-glow-secondary) inset;
    }
}

@keyframes pulse-shadow {
    0%, 100% {
        box-shadow: -24px -24px 60px 0px var(--balto-glow-primary) inset, 32px 32px 80px 0px var(--balto-glow-secondary) inset;
    }
    50% {
        box-shadow: -32px -32px 120px 0px var(--balto-glow-active) inset, 32px 32px 120px 0px var(--balto-glow-active-secondary) inset;
    }
}

/* Output state - after animation completes */
.styledInput.output {
    border: 1px solid transparent;
    background: var(--balto-background-secondary);
    box-shadow: -32px -32px 120px 0px var(--balto-glow-active) inset, 32px 32px 120px 0px var(--balto-glow-active-secondary) inset;
    animation: fade-out-glow 3s ease forwards;
}

/* SVG outline container */
.thinkingOutline {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border-radius: 6px;
    z-index: 1;
}

/* Animated gradient border for thinking state */
.gradientPath {
    fill: none;
    stroke: url(#loading-gradient);
    stroke-width: 4;
    stroke-linecap: round;
    stroke-dasharray: 92 1280;
    stroke-dashoffset: 1360;
    transition: none;
    filter: drop-shadow(0 0 2px var(--balto-glow-primary));
    opacity: 0.3;
}

/* Base border for thinking state */
.basePath {
    fill: none;
    stroke: var(--balto-gradient-primary-start);
    stroke-width: 4;
    stroke-linecap: round;
    opacity: 0.3;
}

/* Completed gradient border for output state */
.outlinePath {
    fill: none;
    stroke: url(#completed-gradient);
    stroke-width: 4;
    stroke-linecap: round;
    stroke-dasharray: 0;
    stroke-dashoffset: 0;
    transition: stroke-width 0.1s ease;
}

/* Thinking state - show animated border */
.thinkingOutline.thinking {
    display: block;
}

.thinkingOutline.thinking .outlinePath {
    display: none;
}

.thinkingOutline.thinking .basePath {
    opacity: 1;
    stroke-width: 6;
    stroke: url(#completed-gradient);
}

.thinkingOutline.thinking .gradientPath {
    stroke-width: 6;
    animation: trace-outline 3s linear infinite;
    opacity: 1;
}

/* Output state - show completed border */
.thinkingOutline.output {
    display: block;
}

.thinkingOutline.output .outlinePath {
    stroke: url(#completed-gradient);
    stroke-dasharray: 0;
    stroke-dashoffset: 0;
    stroke-width: 6;
    animation: fade-out-stroke 3s ease forwards;
}

.thinkingOutline.output .basePath {
    stroke-width: 6;
    stroke: url(#completed-gradient);
    opacity: 1;
    animation: fade-out-stroke 3s ease forwards;
}

.thinkingOutline.output .gradientPath {
    display: none;
}

@keyframes trace-outline {
    0% {
        stroke-dasharray: 92 1360;
        stroke-dashoffset: 1360;
    }
    100% {
        stroke-dasharray: 92 1360;
        stroke-dashoffset: 0;
    }
}

@keyframes fade-out-glow {
    0% {
        box-shadow: -32px -32px 120px 0px var(--balto-glow-active) inset, 32px 32px 120px 0px var(--balto-glow-active-secondary) inset;
        border: 1px solid transparent;
    }
    100% {
        box-shadow: none;
        border: 1px solid var(--balto-border-primary);
    }
}

@keyframes fade-out-stroke {
    0% {
        stroke-opacity: 1;
        stroke-width: 6;
    }
    100% {
        stroke-opacity: 0;
        stroke-width: 1;
    }
}

.skeletonContainer {
    position: absolute;
    top: 60px;
    left: 24px;
    right: 24px;
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.skeletonLine {
    height: 12px;
    border-radius: 16px;
    background: linear-gradient(
        90deg,
        rgba(0, 0, 0, 0.08) 0%,
        rgba(0, 0, 0, 0.12) 20%,
        rgba(0, 0, 0, 0.12) 35%,
        rgba(0, 0, 0, 0.08) 50%,
        rgba(0, 0, 0, 0.12) 65%,
        rgba(0, 0, 0, 0.12) 80%,
        rgba(0, 0, 0, 0.08) 100%
    );
    background-size: 200% 100%;
}

.skeletonLine:nth-child(1) {
    width: 100%;
}

.skeletonLine:nth-child(2) {
    width: 80%;
}

.shimmer {
    animation: shimmer 3s linear infinite;
}

@keyframes shimmer {
    from {
        background-position: 0% 0;
    }
    to {
        background-position: -200% 0;
    }
} 